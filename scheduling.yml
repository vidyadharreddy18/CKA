#specifying node name

apiVersion: v1
kind: Pod
metadata:
  name: myapp-pod
  labels:
    type: front-end
spec:
  containers:
  - name: nginx-container
    image: nginx
  nodeName: node01
  

#taints and tolerations
---
description:>
  taints are dependent and independent on each other. Taints operate on nodes and toleration operate on pods.
  kubectl taint node <node-name> <key=value:<taint-effect>>
  taints-effects: NoSchedule, PreferNoSchedule, NoExecute.

apiVersion: v1 
kind: Pod
metadata: 
   name: myapp
   labels:
      type: web-server
spec:
  containers:
   - name: nginx
     image: nginx
  tolerations:           #equivalent to taint disk=true:NoSchedule
   - key: "disk"
     operator: "Equal"
     value: "true"
     effect: "NoSchedule"
 


#NodeSelectors
---
description:>
  we first label node, later use this label under specs in the pod definition file.
  kubectl label nodes <node-name> <key>:<value>
  
apiVersion: v1
kind: Pod
metadata: 
  name: myapp
  label:
    type: front-end
spec:
  containers:
  - name: myapp-container
    image: nginx
  nodeSelector:
    Hugepages: true
  
  


#NodeAffinity
---
apiVersion: v1
kind: Pod
metadata:
  name: mypod
  label: 
    type: frontend
spec:
  containers:
  - name: nginx
    image: nginx
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution: 
        nodeSelectorTerms:
        - matchExpressions: 
          - key: availability-zone
            operator: In
            values:
            - zone1


#Pod Affinity
---
description:>
  "This pod should or should not run on an X node if that X node is already running one or more pods that meet rule Y" 

#pod1 definition file
apiVersion: v1
kind: Pod
metadata:
  name: pod1
  labels:
    type: front-end
spec:
  containers:
  - name: pod1-nginx
    image: nginx
    
#pod2 definitioon file to cohost on the same node with pod1
apiVersion: v1
kind: Pod
metadata:
  name: pod2
spec:
  affinity:
    podAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: type
            operator: In
            values:
            - front-end
        topologyKey: kubernetes.io/hostname
  containers:
  - name: pod2-nginx
    image: nginx





